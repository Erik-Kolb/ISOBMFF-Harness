/**
 * @file test_data.h
 * @author Dimitri Podborski
 * @brief Sample bitstream data for testing
 * @version 0.1
 * @date 2020-11-20
 *
 * @copyright This software module was originally developed by Apple Computer, Inc. in the course of
 * development of MPEG-4. This software module is an implementation of a part of one or more MPEG-4
 * tools as specified by MPEG-4. ISO/IEC gives users of MPEG-4 free license to this software module
 * or modifications thereof for use in hardware or software products claiming conformance to MPEG-4.
 * Those intending to use this software module in hardware or software products are advised that its
 * use may infringe existing patents. The original developer of this software module and his/her
 * company, the subsequent editors and their companies, and ISO/IEC have no liability for use of
 * this software module or modifications thereof in an implementation. Copyright is not released for
 * non MPEG-4 conforming products. Apple Computer, Inc. retains full right to use the code for its
 * own purpose, assign or donate the code to a third party and to inhibit third parties from using
 * the code for non MPEG-4 conforming products. This copyright notice must be included in all copies
 * or derivative works. Copyright (c) 1999.
 *
 */
#pragma once
#include <MP4OSMacros.h>

const u32 TIMESCALE = 30000;
const u32 FPS       = 30;

namespace HEVC
{
const u8 VPS[] = {0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x04, 0x08, 0x00, 0x00, 0x03, 0x00,
                  0x9F, 0xA8, 0x00, 0x00, 0x03, 0x00, 0x00, 0x1E, 0xBA, 0x02, 0x40};

const u8 SPS[] = {0x42, 0x01, 0x01, 0x04, 0x08, 0x00, 0x00, 0x03, 0x00, 0x9F, 0xA8, 0x00, 0x00,
                  0x03, 0x00, 0x00, 0x1E, 0xA0, 0x20, 0x83, 0x16, 0x5B, 0xAB, 0x93, 0x2B, 0x9A,
                  0x02, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x03, 0x00, 0x32, 0x10};

const u8 PPS[] = {0x44, 0x01, 0xC1, 0x73, 0xC0, 0x89};

const u8 auRed[] = {0x28, 0x01, 0xAF, 0x78, 0xF7, 0x04, 0x03, 0xFF, 0xDB, 0xA3, 0xFF,
                    0xED, 0x27, 0xD2, 0xF6, 0xC3, 0x94, 0x40, 0x83, 0xC0, 0x00, 0x78};

const u8 auBlue[] = {0x28, 0x01, 0xAF, 0x0A, 0xE0, 0x3F, 0x9C, 0x43, 0xFF, 0xFA, 0x87, 0x32, 0xAF,
                     0xFC, 0x5D, 0xFF, 0xFF, 0xAE, 0x1D, 0xB9, 0xA2, 0xB4, 0xBC, 0x6D, 0x84, 0x5F};

const u8 auGreen[] = {0x28, 0x01, 0xAF, 0x0A, 0xE0, 0x3F, 0x9C, 0x43, 0xFF, 0xF5, 0x9F, 0x1F, 0xFF,
                      0xD8, 0x3B, 0xFF, 0xFD, 0xF0, 0xF5, 0xB9, 0xA2, 0xB4, 0xBC, 0x6D, 0x84, 0x5F};

const u8 auYellow[] = {0x28, 0x01, 0xAF, 0x0A, 0xA0, 0x3F, 0x9C, 0x43, 0x3C,
                       0xFA, 0x51, 0x1D, 0xFF, 0xFC, 0x5D, 0xFE, 0xCB, 0xAE,
                       0x1D, 0xB9, 0xA2, 0xB4, 0xBC, 0x6D, 0x84, 0x5F};

const u8 auWhite[] = {0x28, 0x01, 0xAF, 0x0A, 0xE0, 0x3C, 0x64, 0x00, 0xE7, 0x9F,
                      0x6C, 0x07, 0x79, 0x0D, 0x1B, 0xFD, 0x7D, 0x7C, 0x87};

const u8 auBlack[] = {0x28, 0x01, 0xAF, 0x0A, 0xE0, 0x3C, 0x64, 0x00, 0xFF, 0xFF,
                      0x72, 0xCA, 0x19, 0x0D, 0x1B, 0xFD, 0x7D, 0x7C, 0x87};
} // namespace HEVC

/// One file-level meta with 'test' handler and 2 EntityToGroups:
/// 1 - 'altr' with group_id = 123 and two entity_ids, 1001 & 2001
/// 2 - 'altX' with group_id = 555 and no entity_ids but 4 bytes of unknown data DEADBEEF
const u8 META_FILE1[] = {
  0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70, 0x6D, 0x70, 0x34, 0x32, 0x00, 0x00, 0x00, 0x00,
  0x6D, 0x70, 0x34, 0x32, 0x69, 0x73, 0x6F, 0x6D, 0x00, 0x00, 0x00, 0x6D, 0x6D, 0x65, 0x74, 0x61,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x67, 0x72, 0x70,
  0x6C, 0x00, 0x00, 0x00, 0x1C, 0x61, 0x6C, 0x74, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, 0xE9, 0x00, 0x00, 0x07, 0xD1, 0x00, 0x00, 0x00,
  0x18, 0x61, 0x6C, 0x74, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x2B, 0x00, 0x00, 0x00,
  0x00, 0xDE, 0xAD, 0xBE, 0xEF, 0x00, 0x00, 0x00, 0x8C, 0x6D, 0x6F, 0x6F, 0x76, 0x00, 0x00, 0x00,
  0x6C, 0x6D, 0x76, 0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0xDD, 0xD4, 0x52, 0x0E, 0xDD, 0xD4, 0x52,
  0x0E, 0x00, 0x00, 0x02, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x69, 0x6F, 0x64,
  0x73, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x80, 0x80, 0x07, 0x3F, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF};

namespace VVC
{
/// version=0, flags=0, LengthSizeMinusOne=1, ptl_present_flag=0, num_of_arrays=0
const u8 VVCC_1[] = {0x00, 0x00, 0x00, 0x0E, 0x76, 0x76, 0x63,
                     0x43, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x00};

/// vvcC from Nokia's test file vvc_basic_track.mp4
const u8 VVCC_2[] = {
  0x00, 0x00, 0x00, 0xF9, 0x76, 0x76, 0x63, 0x43, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x51, 0xFF,
  0x01, 0x02, 0x23, 0x80, 0x00, 0x00, 0x01, 0xA0, 0x00, 0xF0, 0x00, 0x00, 0x02, 0x8F, 0x00, 0x01,
  0x00, 0xC5, 0x00, 0x79, 0x00, 0x8D, 0x02, 0x23, 0x80, 0x00, 0x00, 0xC0, 0x1A, 0x10, 0x1E, 0x23,
  0x50, 0x03, 0x17, 0xA2, 0x37, 0x44, 0x23, 0x44, 0x29, 0x32, 0x37, 0x09, 0xB2, 0xB1, 0x82, 0x04,
  0x13, 0xC0, 0x15, 0x20, 0x42, 0x10, 0x88, 0x31, 0x11, 0x16, 0x48, 0x8B, 0x51, 0x17, 0xA3, 0xD5,
  0xA9, 0x2F, 0x24, 0x9A, 0x92, 0xC9, 0x11, 0x6A, 0x22, 0xF1, 0x12, 0x6A, 0x22, 0x45, 0x24, 0x44,
  0x99, 0x22, 0x25, 0xD4, 0x91, 0x14, 0x10, 0xB1, 0x10, 0x81, 0x92, 0x20, 0xD4, 0x80, 0xAB, 0x08,
  0x42, 0x16, 0x20, 0x10, 0xB2, 0x04, 0x08, 0x84, 0x08, 0x16, 0x42, 0x04, 0x09, 0x10, 0x20, 0xD0,
  0x40, 0x92, 0x08, 0x38, 0x41, 0x90, 0x22, 0xD0, 0x82, 0x48, 0x43, 0x88, 0x68, 0x4B, 0x91, 0xCA,
  0x82, 0x16, 0x20, 0x10, 0xB2, 0x04, 0x08, 0x84, 0x08, 0x3F, 0xFF, 0xFE, 0xBF, 0x18, 0x90, 0x00,
  0x83, 0xD6, 0x00, 0x19, 0xBF, 0xCC, 0x0E, 0x13, 0xF0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03,
  0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A,
  0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0,
  0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03,
  0x0D, 0x40, 0x06, 0x1A, 0x98, 0x00, 0x40, 0x90, 0x00, 0x01, 0x00, 0x0D, 0x00, 0x81, 0x00, 0x00,
  0x1A, 0x10, 0x1E, 0x22, 0xA4, 0x01, 0x0F, 0xB0, 0x20};

// copy from VVCC_2
const u8 SPS[] = {
  0x00, 0x79, 0x00, 0x8D, 0x02, 0x23, 0x80, 0x00, 0x00, 0xC0, 0x1A, 0x10, 0x1E, 0x23, 0x50, 0x03,
  0x17, 0xA2, 0x37, 0x44, 0x23, 0x44, 0x29, 0x32, 0x37, 0x09, 0xB2, 0xB1, 0x82, 0x04, 0x13, 0xC0,
  0x15, 0x20, 0x42, 0x10, 0x88, 0x31, 0x11, 0x16, 0x48, 0x8B, 0x51, 0x17, 0xA3, 0xD5, 0xA9, 0x2F,
  0x24, 0x9A, 0x92, 0xC9, 0x11, 0x6A, 0x22, 0xF1, 0x12, 0x6A, 0x22, 0x45, 0x24, 0x44, 0x99, 0x22,
  0x25, 0xD4, 0x91, 0x14, 0x10, 0xB1, 0x10, 0x81, 0x92, 0x20, 0xD4, 0x80, 0xAB, 0x08, 0x42, 0x16,
  0x20, 0x10, 0xB2, 0x04, 0x08, 0x84, 0x08, 0x16, 0x42, 0x04, 0x09, 0x10, 0x20, 0xD0, 0x40, 0x92,
  0x08, 0x38, 0x41, 0x90, 0x22, 0xD0, 0x82, 0x48, 0x43, 0x88, 0x68, 0x4B, 0x91, 0xCA, 0x82, 0x16,
  0x20, 0x10, 0xB2, 0x04, 0x08, 0x84, 0x08, 0x3F, 0xFF, 0xFE, 0xBF, 0x18, 0x90, 0x00, 0x83, 0xD6,
  0x00, 0x19, 0xBF, 0xCC, 0x0E, 0x13, 0xF0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40,
  0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01,
  0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D,
  0x40, 0x03, 0x0D, 0x40, 0x06, 0x1A, 0xB0, 0x01, 0x86, 0xA0, 0x03, 0x0D, 0x40, 0x03, 0x0D, 0x40,
  0x06, 0x1A, 0x98, 0x00, 0x40};

const u8 PPS[] = {
  0x00, 0x81, 0x00, 0x00, 0x1A, 0x10, 0x1E, 0x22, 0xA4, 0x01, 0x0F, 0xB0, 0x20};

} // namespace VVC
